{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7547F58aB69052A36FD2E8c472d32ED67E9ecd9A",
    "txHash": "0x63e3303df4f83a92a35bbe5be4db47359dbbf04e2842bf8262b163186819cfd2",
    "deployTransaction": {
      "hash": "0x63e3303df4f83a92a35bbe5be4db47359dbbf04e2842bf8262b163186819cfd2",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x698AB99Df3b889B4cbD5434c078d06e8EFF8e897",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x9502f90d"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f900"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f90d"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 699,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xff44b5c6bd18444d28f97bf32697dc0b085213888528e1c1f3d544ce489d33f3",
      "s": "0x66b1f4ab4e3d5d584e29f43f360df87431292ca66a89f434da1c21e007d0c1a8",
      "v": 0,
      "creates": "0x7547F58aB69052A36FD2E8c472d32ED67E9ecd9A",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xE821D4fc4eF7EED2bbC49eb47952F05799fA715B",
      "txHash": "0xe0830abfbb28e60063263902a7572583105ad6da8fa2b83ade43b9187523c2e9",
      "kind": "transparent"
    },
    {
      "address": "0x98180a1c6E739465441e8F8986D68978F1a42F8d",
      "txHash": "0x986527968efb65969f170a7831e475839501e3ffd5b461fd20d7e2c7a2752d09",
      "kind": "transparent"
    },
    {
      "address": "0x7047B2Be7d14a36DB69D27ECebBc93633067A060",
      "txHash": "0x65c0544b796c5ed10997bd7cc6621ac99c5bc3b013112542ee306746f0c927ea",
      "kind": "transparent"
    },
    {
      "address": "0x779411E87139BB882727BAa27F9E8CFe887ad208",
      "txHash": "0xfbe521bd7daed4a1ad6a98234f6cdf567e6b94a8fdd7d84d6c999a35473681b7",
      "kind": "transparent"
    },
    {
      "address": "0xb893257584d3e5bB84a14ABaaD222f9d367f7056",
      "txHash": "0xbad47333e7cbbf134b83efbb8da2f5ffd398dd5bd899d992be04f7ced0e1b1b1",
      "kind": "transparent"
    },
    {
      "address": "0x6745e12Db1128c603750fE3Cc23EF02131a1b51E",
      "txHash": "0x46bae9aab154d1d94f266231bdf36f6a434606ef08bc3b36f93c36fe0826fa70",
      "kind": "transparent"
    },
    {
      "address": "0xe65F7E7173D3a17eF03e0F1D6494CDf9844078F1",
      "txHash": "0xb7c0c61110ba10c95be9f604699dab72acfef9cedb21e8e1fe1967583df0c62e",
      "kind": "transparent"
    },
    {
      "address": "0x2870875E582c98982Dee9557249921F400196138",
      "txHash": "0xb7f4973cedf5efc41bf921340c02369d892b723c45337fd714ee5bb2e9833927",
      "kind": "transparent"
    },
    {
      "address": "0x35D27aBCDc689744c21AbF22484eb78A640E3227",
      "txHash": "0x424b6361419b2ea7c51f318da2f9346a3f113cfee284c9c24c9ff47c9620fa52",
      "kind": "transparent"
    }
  ],
  "impls": {
    "283cfcdd0e231056e2e10d26572cc330e4f2ff74f9b209aa95f1f2fa3eb3a04c": {
      "address": "0xd4943CB3F53eA9FEE1fe19c7411Afb29013aD267",
      "txHash": "0xda0d9a86d52e26d7e78e16ce34dd9fe06286602ff0f9bfa279c2c66cb2b2bd13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AssetMatcher",
            "label": "matchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/exchange/AssetMatcher.sol:13"
          },
          {
            "contract": "AssetMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/exchange/AssetMatcher.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/exchange/TransferExecutor.sol:21"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/exchange/TransferExecutor.sol:63"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "OrderValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/exchange/OrderValidator.sol:52"
          },
          {
            "contract": "ExchangeCore",
            "label": "fills",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/exchange/ExchangeCore.sol:25"
          },
          {
            "contract": "ExchangeCore",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/exchange/ExchangeCore.sol:182"
          },
          {
            "contract": "TransferManager",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/exchange/TransferManager.sol:26"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesRegistry",
            "type": "t_contract(IRoyaltiesProvider)8385",
            "src": "contracts/exchange/TransferManager.sol:27"
          },
          {
            "contract": "TransferManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "contracts/exchange/TransferManager.sol:29"
          },
          {
            "contract": "TransferManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/exchange/TransferManager.sol:30"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/exchange/TransferManager.sol:230"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRoyaltiesProvider)8385": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ac4271024cb974ee895935cdebe0fe5d8542244dfa8af2f9836b26825dd129d5": {
      "address": "0xb554DEA43Ee36F809173E169a08980FB73C9c24C",
      "txHash": "0x8868cb506bae0bf052af1834421d2961416eb4458156e5db20289398099bd576",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3593_storage)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2970_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:38"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:93"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:495"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/tokens/erc-721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721DefaultApproval.sol:24"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721BurnableUpgradeable.sol:40"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:34"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/Mint721Validator.sol:16"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)11817_storage)dyn_storage)",
            "src": "contracts/royalties/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)11817_storage)dyn_storage)",
            "src": "contracts/tokens/erc-721/ERC721Lazy.sol:23"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721Lazy.sol:114"
          },
          {
            "contract": "HasContractURI",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts/tokens/HashContractURI.sol:9"
          },
          {
            "contract": "HasContractURI",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/HashContractURI.sol:29"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721Base.sol:30"
          },
          {
            "contract": "ERC721NFTon",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721NFTon.sol:34"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)11817_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)11817_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)11817_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)3593_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3593_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3207_storage"
              }
            ]
          },
          "t_struct(Set)3207_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2970_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2652_storage"
              }
            ]
          },
          "t_struct(Map)2652_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2644_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2644_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2644_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "23d859712091c01d5e54fbb51d75c0d71a8adee8423e55dca5f08c25e41bf625": {
      "address": "0x92DCE243e82310BdAA281e1734f13A7e995fdB04",
      "txHash": "0x6ce37e504f0033a132fa8820f16cd9bd17dca8f6fc778ad3f7abf8d8ccfad344",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721HolderUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "TokenToAuction",
            "label": "tokenToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/auction/TokenToAuction.sol:9"
          },
          {
            "contract": "TokenToAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/auction/TokenToAuction.sol:28"
          },
          {
            "contract": "AuctionHouseBase",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/auction/AuctionHouseBase.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/exchange/TransferExecutor.sol:21"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/exchange/TransferExecutor.sol:63"
          },
          {
            "contract": "TransferManager",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/exchange/TransferManager.sol:27"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesRegistry",
            "type": "t_contract(IRoyaltiesProvider)13956",
            "src": "contracts/exchange/TransferManager.sol:28"
          },
          {
            "contract": "TransferManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "contracts/exchange/TransferManager.sol:30"
          },
          {
            "contract": "TransferManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/exchange/TransferManager.sol:31"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/exchange/TransferManager.sol:276"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(Auction)8245_storage)",
            "src": "contracts/auction/AuctionHouse.sol:16"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctionId",
            "type": "t_uint256",
            "src": "contracts/auction/AuctionHouse.sol:19"
          },
          {
            "contract": "AuctionHouse",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/auction/AuctionHouse.sol:331"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Auction)8245_storage)": {
            "label": "mapping(uint256 => struct AuctionHouseBase.Auction)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Auction)8245_storage": {
            "label": "struct AuctionHouseBase.Auction",
            "members": [
              {
                "label": "sellAsset",
                "type": "t_struct(Asset)11505_storage"
              },
              {
                "label": "buyAsset",
                "type": "t_struct(AssetType)11500_storage"
              },
              {
                "label": "lastBid",
                "type": "t_struct(Bid)8252_storage"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "buyer",
                "type": "t_address_payable"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "minimalStep",
                "type": "t_uint256"
              },
              {
                "label": "minimalPrice",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256"
              },
              {
                "label": "dataType",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Asset)11505_storage": {
            "label": "struct LibAsset.Asset",
            "members": [
              {
                "label": "assetType",
                "type": "t_struct(AssetType)11500_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(AssetType)11500_storage": {
            "label": "struct LibAsset.AssetType",
            "members": [
              {
                "label": "assetClass",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Bid)8252_storage": {
            "label": "struct AuctionHouseBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "dataType",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRoyaltiesProvider)13956": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
